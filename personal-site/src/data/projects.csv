title,subheader,date,img,desc,github,link,youtube,devpost
Differential Privacy (X-rays), Exploring the efficacy of various differential privacy techniques on X-ray images, Oct 2022-Mar 2023,x-ray.png,"Training models require large datasets which are often crowdsourced with sensitive information. The risk is that an adversary network can extract parts of the training data, using publicly available datasets. To address this, differential privacy is one way of adding noise to the data to eliminate the direct translation back to the source while maintaining accuracy. As a baseline, we explore DP-SGD, which embeds differential privacy in Stochastic Gradient Descent (SGD). We also explore the following techniques: DP-SGD with Johnson-Lindenstrauss JL projections, DP-SGD with federated learning, and the Private Aggregation of Teacher Ensembles (PATE) algorithm. Made with: Python, PyTorch, Tensorflow",https://github.com/NicoleStrel/Deep-Learning-with-Differential-Privacy,https://drive.google.com/file/d/1H2zyOLYErm9dZ7LU9Tj21nIm9SsoQdVo/view?usp=sharing,,,
Gender Bias in word2vec,Debiasing and measuring bias in embeddings,Jan-Apr 2022,nlp.jpeg,"Word embeddings tend to amplify biases found in the datasets they were trained on, which in turn reflect gender biases in society. Our aim with this project was to explore different debiasing methods and ways to measure gender bias on word embeddings created from two datasets: Wikipedia articles and Gutenburg books. We used PyTorch, SkyLearn, and Numpy Python libraries to create a custom model, run our model and the word2vec model training, and run experiments for the gender bias metrics that we were evaluating our training on. Made with: Python, PyTorch",https://github.com/JasmineZhangxyz/genderDebiasing,https://drive.google.com/file/d/1OvZklYTD9vgQOzuOYNJsEVuitGmB7-bl/view,,
PicPerfect,Travel bucket list creator,Jan 2021,gallery.jpeg,"PicPerfect is a bucket list creator, which uses Apify to scrape Tumbler for popular tourist destinations. A user can enter a search query for a country, our backend gets photo and location data from Tumblr and sends it to our React frontend through REST API. The user can choose the travel destinations that interest them and create their bucket list. Ultimately, the list can be downloaded for future reference. I worked on interfacing the backend to the frontend, web scraping with Apify, and the storing system for the bucket list. Made with: React, Apify, NodeJS, Docker",https://github.com/NicoleStrel/PicPerfect,,,https://devpost.com/software/picperfect
FreshAir,Visualizer for air pollution around the world,Jul-Sep 2020,air.png,"FreshAir is a data visualization interface for air emissions across the world. It aims to encourage countries to improve their air quality and focus on air pollution reduction. On our site, air pollution is represented with a shade between white and black on an interactive world map. Pollution progression throughout the years is shown through graphs made with Amazon’s Sagemaker, and countries are ranked based on the number of tonnes of smog they emit. We also included additional information from the CRUX OECD - Air Emissions by Source dataset on the types of pollutants there are for each country and year. I worked on the React site which fed the data into our dynamic SVG map and visuals. Made with: React, Amazon Sagemaker, AWS Amplify",https://github.com/NicoleStrel/fresh-Air,,,https://devpost.com/software/freshair
Sinking Atolls,Raising awareness for the sinking Marshall Islands,Jun-Jul 2020,atoll.png,"To spread awareness of the rising sea levels in the Marshall islands due to global warming, our site provides useful 3D visuals of those rises on some of the atolls that have tide-gauge data. The 3D models of those atolls were created using Blender and three.js was used to load them and display the water level for each year datapoint. Made with: Javascript, Blender, three.js",https://github.com/NicoleStrel/Saving-the-Marshall-Islands,,,https://devpost.com/software/sinking-atolls
HaveHerBack,A mentorship platform for women running SMEs,Jun 2020,mentor.png,"HaveHerBack is a mentorship platform app for female entrepreneurs running Small and Medium Enterprises (SMEs). Created with Flutter, this app uses Firebase to store the database and configure user authentication for mentors and organisations. Organisations and mentors can connect with each other through our map feature, which was created with Google Cloud’s Map API. I worked on user authentication and Firestore integration with Firebase, and front-end app development with Flutter. Made with: Dart, Flutter, Firebase",https://github.com/margin25/hackgirlsummer,,,https://devpost.com/software/havemyback
TimeLoc,A confluence macro that allows for easier communication and awareness between global teammates,May-Jul 2020,time.png,"TimeLoc is an Atlassian Confluence Macro. It fetches all the collaborators that have connections to a Space and lists their timezone/location, live time, and day/night availably. It is a simple, compact macro, allowing for easy reference as the project develops. I was able to use all the main features of Atlassian’s Forge (configuration component, REST API, and more), which made my app a great example of how to use Forge. Made with: Typescript, Forge",https://github.com/NicoleStrel/TimeLoc,https://timeloc.atlassian.net/wiki/spaces/TIMELOC/overview,,https://devpost.com/software/timelloc
Snake AI,Snake game solver using graph algorithms,Mar-Apr 2020,snake.png,"“Magni’s Adventure” is a Snake AI solver that uses graph algorithms, Depth-First Search (DFS), Breadth-First Search (BFS), a modified BFS and Hamilton, to solve the classic game of snake. The snake moves across the board to eat the red dots, and the game is won when the entire board is filled with the snake's body and no collisions occur with the body of the snake or the edges of the board. I used object-oriented programing to create the snake, red dots, and board and ran extensive tests to analyze the algorithms' performance, where Hamilton had a 100% success rate. Made with: Python",https://github.com/NicoleStrel/Snake-AI,https://drive.google.com/file/d/1Xsziap9EjEmBrFRZSb2IMA3rBfuhfGc-/view?usp=sharing,https://youtu.be/LOslRZS3mAI,
Solar Orbiter,Simulates the solar system in 2D and 3D,Jan 2019,solar.png,"Solar Orbiter is a program created with Java that mimics the orbital motions of our solar system in 2D and 3D, using java3d. It has options for speed, size, and movement to show the orbits, axial tilts, and planet labels, as well as descriptions of each planet/sun. Made with: Java, java3d",https://github.com/NicoleStrel/Solar-Orbiter,,,